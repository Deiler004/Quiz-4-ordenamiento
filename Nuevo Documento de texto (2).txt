# Definición de la función quicksort
def quicksort(arreglo, izquierda, derecha):
    if izquierda < derecha:
        indiceParticion = particion(arreglo, izquierda, derecha)
        quicksort(arreglo, izquierda, indiceParticion)
        quicksort(arreglo, indiceParticion + 1, derecha)

# Definición de la función partición
def particion(arreglo, izquierda, derecha):
    pivote = arreglo[izquierda]  # Elige el pivote como el primer elemento
    while True:
        # Avanza el índice de izquierda hasta que encuentre un valor mayor o igual al pivote
        while arreglo[izquierda] < pivote:
            izquierda += 1

        # Decrementa el índice de derecha hasta que encuentre un valor menor o igual al pivote
        while arreglo[derecha] > pivote:
            derecha -= 1

        # Si los índices se cruzan, devuelve el índice de la derecha
        if izquierda >= derecha:
            return derecha
        else:
            # Si no, intercambia los elementos desordenados
            arreglo[izquierda], arreglo[derecha] = arreglo[derecha], arreglo[izquierda]
            izquierda += 1
            derecha -= 1